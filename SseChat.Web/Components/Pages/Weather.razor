@page "/weather"
@using SseChat.Data.Models
@rendermode InteractiveServer

@implements IAsyncDisposable
@inject IJSRuntime JS

<PageTitle>Weather</PageTitle>
@foreach (var message in _messages)
{
    <p>
        <span>@message.CreatedAt</span>
        <span>@message.Id</span>
        <span>@message.User</span>
        <span>@message.Text</span>
    </p>
}

@code {
    private IJSObjectReference? _jsModule;
    private DotNetObjectReference<Weather>? _dotNetRef;
    private List<Message> _messages = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (JS == null)
            {
                throw new Exception("JS Bad");
            }
            _jsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/eventSourceHandler.js");
            _dotNetRef = DotNetObjectReference.Create(this);
            await _jsModule.InvokeVoidAsync("eventSourceHandler.startEventSource", "https://localhost:7329/api/message", _dotNetRef);
        }
    }

    [JSInvokable]
    public async Task OnMessageReceived(Message message)
    {
        _messages.Add(message);
        Console.WriteLine($"Message received: {message.Text}");
        StateHasChanged();
        // Handle the item (update UI, etc.)
    }

    public async ValueTask DisposeAsync()
    {
        if (_jsModule != null)
        {
            await _jsModule.InvokeVoidAsync("eventSourceHandler.stopEventSource");
            await _jsModule.DisposeAsync();
        }
        _dotNetRef?.Dispose();
    }
}
